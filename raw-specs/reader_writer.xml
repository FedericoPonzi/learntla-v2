<?xml version="1.0"?>
<root folder="reader_writer">
<spec name="reader_writer_1" num="3">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC

(* --algorithm reader_writer
variables
  queue = &lt;&lt;>>;
  total = 0;


process writer = 1
begin
  AddToQueue:
    queue := Append(queue, 1);
end process;<s on="2-">

process reader = 0
begin
  ReadFromQueue:</s><s on="3">
    if queue # &lt;&lt;>> then
      total := total + Head(queue);
      queue := Tail(queue);
    end if;</s><s on="2">
    total := total + Head(queue);
    queue := Tail(queue);</s>
<s on="2-">end process;
</s>end algorithm; *)
====
</spec>

<spec name="rw_local" num="2">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC

(* --algorithm reader_writer
variables
  queue = &lt;&lt;>>;
  total = 0;<s on="1">
  i = 0;</s>

process writer = 1<s on="2">
variables
  i = 0;</s>
begin
  AddToQueue:
    while i &lt; 2 do
      queue := Append(queue, 1);
      i := i + 1;
    end while;
end process;

process reader = 0
begin
  ReadFromQueue:
    if queue # &lt;&lt;>> then
      total := total + Head(queue);
      queue := Tail(queue);
    end if;
end process;
end algorithm; *)
====
</spec>

<spec name="rw_many" num="4">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC

Writers == {1, 2, 3}<s on="4">
Readers = {-1, 0}</s>

(*--algorithm reader_writer
variables
  queue = &lt;&lt;>>;
  total = <s on="-3">0</s><s on="4-">[r \in Readers |-> 0]</s>;

process writer \in Writers
begin
  AddToQueue:
    queue := Append(queue, <s on="-2">1</s><s on="3">self</s>);
end process;

process reader <s on="-3">= 0</s><s on="4-">\in Readers</s>
\* Make this use a local variable so there's no deadlock
begin
  ReadFromQueue:
    if queue # &lt;&lt;>> then
      total<s on="4">[self]</s> := total<s on="4">[self]</s> + Head(queue);
      queue := Tail(queue);
    end if;<s on="2">
    goto ReadFromQueue;</s>
end process;
end algorithm; *)
====
</spec>

<spec name="rw_await" num="1">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC

Writers == {1, 2, 3}

(* --algorithm reader_writer
variables
  queue = &lt;&lt;>>;
  total = 0;

process writer \in Writers
begin
  AddToQueue:
    await queue = <<>>;
    queue := Append(queue, self);
end process;

process reader = 0
begin
  ReadFromQueue:<s on="2">
    await queue # &lt;&lt;>>;</s>
    total := total + Head(queue);
    queue := Tail(queue);
    goto ReadFromQueue;
end process;
end algorithm; *)
====
</spec>
</root>

