<?xml version="1.0"?>
<root folder="threads">
<spec name="threads" num="3">
---- MODULE $name ----
EXTENDS TLC, Sequences, Integers<s on="3-">
CONSTANT NULL</s>

NumThreads == 2
Threads == 1..NumThreads

(* --algorithm threads

variables 
  counter = 0;<s on="3">
  lock = NULL;</s>

define
  AllDone == 
    \A t \in Threads: pc[t] = "Done"

  Correct ==
      AllDone => counter = NumThreads
end define;  

process thread \in Threads<s on="2-">
variables tmp = 0;</s>
begin<s on="2-"><s on="3">
  GetLock:
    await lock = NULL;
    lock := self;
</s>
  GetCounter:
    tmp := counter;
</s>
  IncCounter:
    counter := <s on="1">counter</s><s on="2-">tmp</s> + 1;<s on="3">
  
  ReleaseLock:
    lock := NULL; </s>
end process;
end algorithm; *)
====
</spec>
</root>


